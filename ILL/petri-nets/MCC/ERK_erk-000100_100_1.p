
%--------------------------------------------------------------------------
% File     : 
% Domain   : Petri-nets
% Problem  : ERK 
% Version  : 1.0
% Refs     : The Model Checking Contest
% Source   : https://pnrepository.lip6.fr/mcc/models/all/browser.html
%
% Status (linear) : Theorem
% Rating (linear) : 0.00 v1.0.0
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
fof(inital_state, axiom, Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star
fof(r1, axiom, !( (Raf1Star * RKIP) -o (Raf1Star_RKIP) ) ).
fof(r2, axiom, !( (Raf1Star_RKIP) -o (Raf1Star * RKIP) ) ).
fof(r3, axiom, !( (Raf1Star_RKIP * ERKPP) -o (Raf1Star_RKIP_ERKPP) ) ).
fof(r4, axiom, !( (Raf1Star_RKIP_ERKPP) -o (Raf1Star_RKIP * ERKPP) ) ).
fof(r6, axiom, !( (MEKPP * ERK) -o (MEKPP_ERK) ) ).
fof(r7, axiom, !( (MEKPP_ERK) -o (ERK * MEKPP) ) ).
fof(r9, axiom, !( (RP * RKIPP) -o (RKIPP_RP) ) ).
fof(r10, axiom, !( (RKIPP_RP) -o (RP * RKIPP) ) ).
fof(r5, axiom, !( (Raf1Star_RKIP_ERKPP) -o (ERK * RKIPP * Raf1Star) ) ).
fof(r8, axiom, !( (MEKPP_ERK) -o (ERKPP * MEKPP) ) ).
fof(r11, axiom, !( (RKIPP_RP) -o (RKIP * RP) ) ).
fof(con1, conjectureaf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP * Raf1Star_RKIP).
