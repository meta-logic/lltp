
%--------------------------------------------------------------------------
% File     : 
% Domain   : Petri-nets
% Problem  : CircadianClock 
% Version  : 1.0
% Refs     : The Model Checking Contest
% Source   : https://pnrepository.lip6.fr/mcc/models/all/browser.html
%
% Status (linear) : Theorem
% Rating (linear) : 0.00 v1.0.0
%--------------------------------------------------------------------------
fof(inital_state, axiom, da * dr * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap).
fof(deg_r, axiom, !( (r) -o (r_cap) ) ).
fof(deg_a, axiom, !( (a) -o (a_cap) ) ).
fof(transc_da, axiom, !( (da * ma_cap) -o (ma * da) ) ).
fof(deg_c, axiom, !( (c * r_cap) -o (r * c_cap) ) ).
fof(transl_a, axiom, !( (ma * a_cap) -o (a * ma) ) ).
fof(rel_r, axiom, !( (dr_a * a_cap) -o (a * dr) ) ).
fof(bind_a, axiom, !( (da * a) -o (da_a * a_cap) ) ).
fof(deg_ma, axiom, !( (ma) -o (ma_cap) ) ).
fof(deactive, axiom, !( (a * r * c_cap) -o (c * r_cap * a_cap) ) ).
fof(transc_dr_a, axiom, !( (dr_a * mr_cap) -o (mr * dr_a) ) ).
fof(deg_mr, axiom, !( (mr) -o (mr_cap) ) ).
fof(transc_da_a, axiom, !( (da_a * ma_cap) -o (ma * da_a) ) ).
fof(rel_a, axiom, !( (da_a * a_cap) -o (da * a) ) ).
fof(transl_r, axiom, !( (mr * r_cap) -o (r * mr) ) ).
fof(transc_dr, axiom, !( (dr * mr_cap) -o (mr * dr) ) ).
fof(bind_r, axiom, !( (a * dr) -o (dr_a * a_cap) ) ).
fof(con1, conjecture, a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * a_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * c_cap * da * dr * ma * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * ma_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * mr_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap * r_cap).

%--------------------------------------------------------------------------
